{"version":3,"file":"dashboard.js","sources":["../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/globals.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../node_modules/svelte/src/shared/version.js","../node_modules/chart.js/dist/chunks/helpers.dataset.js","../node_modules/chart.js/dist/chart.js","../src/BookmarkCard.svelte","../src/BookmarkListItem.svelte","../src/SearchBar.svelte","../src/database.js","../src/Sidebar.svelte","../src/Dashboard.svelte","../src/dashboard.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.$$l[type]) {\n\t\t\t\tconst idx = this.$$l[type].indexOf(listener);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis.$$l[type].splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.20';\nexport const PUBLIC_VERSION = '4';\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<script>\n  export let bookmark;\n  \n  function formatDate(timestamp) {\n    return new Date(timestamp).toLocaleDateString();\n  }\n  \n  function openBookmark(url) {\n    chrome.tabs.create({ url });\n  }\n  \n  function getFaviconUrl(bookmark) {\n    // For HTTP/HTTPS URLs, create a simple domain-based icon\n    if (bookmark.url.startsWith('http://') || bookmark.url.startsWith('https://')) {\n      // Create a simple letter-based favicon using the first letter of the domain\n      const firstLetter = bookmark.domain.charAt(0).toUpperCase();\n      const colors = ['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#EC4899'];\n      const colorIndex = bookmark.domain.length % colors.length;\n      const color = colors[colorIndex];\n      \n      return `data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"${color}\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"white\" font-weight=\"bold\">${firstLetter}</text></svg>`;\n    }\n    \n    // Return specific icons for different types\n    switch (bookmark.domain) {\n      case 'chrome-internal':\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%23EA4335\"/><circle cx=\"8\" cy=\"8\" r=\"3\" fill=\"white\"/></svg>';\n      case 'local-file':\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%23F59E0B\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"white\">📄</text></svg>';\n      case 'other-protocol':\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%236B7280\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"white\">⚡</text></svg>';\n      default:\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%23E5E7EB\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"%236B7280\">?</text></svg>';\n    }\n  }\n  \n  function getDomainLabel(bookmark) {\n    switch (bookmark.domain) {\n      case 'chrome-internal':\n        return 'Chrome';\n      case 'local-file':\n        return 'Local File';\n      case 'other-protocol':\n        return 'Other';\n      case 'invalid-url':\n        return 'Invalid URL';\n      default:\n        return bookmark.domain;\n    }\n  }\n</script>\n\n<div class=\"bookmark-card bg-white rounded-lg shadow-md p-4 hover:shadow-lg transition-shadow cursor-pointer border border-gray-200\"\n     role=\"button\"\n     tabindex=\"0\"\n     on:click={() => openBookmark(bookmark.url)}\n     on:keydown={(e) => e.key === 'Enter' && openBookmark(bookmark.url)}>\n  <div class=\"flex items-start space-x-3\">\n    <img \n      src=\"{getFaviconUrl(bookmark)}\"\n      alt=\"Favicon\"\n      class=\"w-4 h-4 mt-1 flex-shrink-0\"\n    />\n    <div class=\"flex-1 min-w-0\">\n      <h3 class=\"text-sm font-medium text-gray-900 truncate\" title={bookmark.title}>\n        {bookmark.title}\n      </h3>\n      <p class=\"text-xs text-gray-500 truncate mt-1\" title={bookmark.url}>\n        {bookmark.url}\n      </p>\n      <div class=\"flex items-center justify-between mt-2\">\n        <span class=\"text-xs text-blue-600 bg-blue-50 px-2 py-1 rounded\">\n          {getDomainLabel(bookmark)}\n        </span>\n        <span class=\"text-xs text-gray-400\">\n          {formatDate(bookmark.dateAdded)}\n        </span>\n      </div>\n      {#if bookmark.folderPath}\n        <p class=\"text-xs text-gray-400 mt-1 truncate\" title={bookmark.folderPath}>\n          📁 {bookmark.folderPath}\n        </p>\n      {/if}\n    </div>\n  </div>\n</div>\n\n<style>\n  .bookmark-card:hover {\n    transform: translateY(-1px);\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  \n  export let bookmark;\n  export let isSelected = false;\n  export let multiSelectMode = false;\n  \n  const dispatch = createEventDispatcher();\n  \n  function formatDate(timestamp) {\n    return new Date(timestamp).toLocaleDateString();\n  }\n  \n  function openBookmark(url) {\n    chrome.tabs.create({ url });\n  }\n  \n  function getFaviconUrl(bookmark) {\n    // For HTTP/HTTPS URLs, create a simple domain-based icon\n    if (bookmark.url.startsWith('http://') || bookmark.url.startsWith('https://')) {\n      // Create a simple letter-based favicon using the first letter of the domain\n      const firstLetter = bookmark.domain.charAt(0).toUpperCase();\n      const colors = ['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#EC4899'];\n      const colorIndex = bookmark.domain.length % colors.length;\n      const color = colors[colorIndex];\n      \n      return `data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"${color}\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"white\" font-weight=\"bold\">${firstLetter}</text></svg>`;\n    }\n    \n    // Return specific icons for different types\n    switch (bookmark.domain) {\n      case 'chrome-internal':\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%23EA4335\"/><circle cx=\"8\" cy=\"8\" r=\"3\" fill=\"white\"/></svg>';\n      case 'local-file':\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%23F59E0B\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"white\">📄</text></svg>';\n      case 'other-protocol':\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%236B7280\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"white\">⚡</text></svg>';\n      default:\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%23E5E7EB\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"%236B7280\">?</text></svg>';\n    }\n  }\n  \n  function getDomainLabel(bookmark) {\n    switch (bookmark.domain) {\n      case 'chrome-internal':\n        return 'Chrome';\n      case 'local-file':\n        return 'Local File';\n      case 'other-protocol':\n        return 'Other';\n      case 'invalid-url':\n        return 'Invalid URL';\n      default:\n        return bookmark.domain;\n    }\n  }\n  \n  function handleCheckboxChange(event) {\n    dispatch('toggle-select', {\n      bookmarkId: bookmark.id,\n      selected: event.target.checked\n    });\n  }\n  \n  function handleTitleClick() {\n    if (!multiSelectMode) {\n      openBookmark(bookmark.url);\n    }\n  }\n  \n  function handleDeleteClick(event) {\n    event.stopPropagation();\n    dispatch('delete', { bookmarkId: bookmark.id });\n  }\n</script>\n\n<div class=\"bookmark-list-item group bg-white border-b border-gray-200 hover:bg-gray-50 transition-colors\"\n     class:selected={isSelected}>\n  <div class=\"flex items-center px-4 py-3\">\n    <!-- Checkbox for multi-select -->\n    {#if multiSelectMode}\n      <input \n        type=\"checkbox\" \n        checked={isSelected}\n        on:change={handleCheckboxChange}\n        class=\"mr-3 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n      />\n    {/if}\n    \n    <!-- Favicon -->\n    <img \n      src=\"{getFaviconUrl(bookmark)}\"\n      alt=\"Favicon\"\n      class=\"w-4 h-4 mr-3 flex-shrink-0\"\n    />\n    \n    <!-- Content -->\n    <div class=\"flex-1 min-w-0 cursor-pointer\" \n         role=\"button\" \n         tabindex=\"0\"\n         on:click={handleTitleClick}\n         on:keydown={(e) => e.key === 'Enter' && handleTitleClick()}>\n      <div class=\"flex items-center justify-between\">\n        <div class=\"flex-1 min-w-0\">\n          <h3 class=\"text-sm font-medium text-gray-900 truncate hover:text-blue-600\" title={bookmark.title}>\n            {bookmark.title}\n          </h3>\n          <div class=\"flex items-center mt-1 space-x-2 sm:space-x-4\">\n            <p class=\"text-xs text-gray-500 flex-1 min-w-0\" title={bookmark.url}>\n              <span class=\"truncate block\">{bookmark.url}</span>\n            </p>\n            <span class=\"text-xs text-blue-600 bg-blue-50 px-2 py-1 rounded whitespace-nowrap flex-shrink-0\">\n              {getDomainLabel(bookmark)}\n            </span>\n          </div>\n          {#if bookmark.folderPath}\n            <p class=\"text-xs text-gray-400 mt-1 truncate\" title={bookmark.folderPath}>\n              📁 {bookmark.folderPath}\n            </p>\n          {/if}\n        </div>\n        \n        <!-- Date and Actions -->\n        <div class=\"flex items-center ml-2 sm:ml-4 space-x-2 flex-shrink-0\">\n          <span class=\"text-xs text-gray-400 whitespace-nowrap hidden sm:block\">\n            {formatDate(bookmark.dateAdded)}\n          </span>\n          <button\n            on:click={handleDeleteClick}\n            class=\"p-1 text-gray-400 hover:text-red-600 opacity-0 group-hover:opacity-100 transition-opacity\"\n            title=\"Delete bookmark\"\n          >\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  .bookmark-list-item {\n    transition: all 0.15s ease;\n  }\n  \n  .bookmark-list-item:hover .group-hover\\:opacity-100 {\n    opacity: 1;\n  }\n  \n  .bookmark-list-item.selected {\n    background-color: #dbeafe;\n    border-left: 4px solid #3b82f6;\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let value = '';\n  \n  let debounceTimer;\n  \n  function handleInput(event) {\n    value = event.target.value;\n    \n    // Debounce search to avoid too many queries\n    clearTimeout(debounceTimer);\n    debounceTimer = setTimeout(() => {\n      dispatch('search', { query: value });\n    }, 300);\n  }\n  \n  function clearSearch() {\n    value = '';\n    dispatch('search', { query: '' });\n  }\n</script>\n\n<div class=\"relative mb-6\">\n  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n    </svg>\n  </div>\n  <input\n    type=\"text\"\n    bind:value\n    on:input={handleInput}\n    placeholder=\"Search bookmarks by title or URL...\"\n    class=\"block w-full pl-10 pr-10 py-3 border border-gray-300 rounded-lg leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n  />\n  {#if value}\n    <button\n      on:click={clearSearch}\n      class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n      type=\"button\"\n    >\n      <svg class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n      </svg>\n    </button>\n  {/if}\n</div>\n","// Database utilities using Chrome storage instead of Dexie for simplicity\n\n// Get all bookmarks from Chrome storage\nexport async function getAllBookmarks() {\n  try {\n    const result = await chrome.storage.local.get(['bookmarks']);\n    return result.bookmarks || [];\n  } catch (error) {\n    console.error('Error getting bookmarks:', error);\n    return [];\n  }\n}\n\n// Search functionality\nexport async function searchBookmarks(query) {\n  try {\n    const bookmarks = await getAllBookmarks();\n    \n    if (!query.trim()) {\n      return bookmarks.sort((a, b) => b.dateAdded - a.dateAdded);\n    }\n    \n    const lowerQuery = query.toLowerCase();\n    return bookmarks\n      .filter(bookmark => \n        bookmark.title.toLowerCase().includes(lowerQuery) ||\n        bookmark.url.toLowerCase().includes(lowerQuery) ||\n        bookmark.domain.toLowerCase().includes(lowerQuery)\n      )\n      .sort((a, b) => b.dateAdded - a.dateAdded);\n  } catch (error) {\n    console.error('Search error:', error);\n    return [];\n  }\n}\n\n// Get bookmarks by domain\nexport async function getBookmarksByDomain(domain) {\n  try {\n    const bookmarks = await getAllBookmarks();\n    return bookmarks.filter(bookmark => bookmark.domain === domain);\n  } catch (error) {\n    console.error('Error getting bookmarks by domain:', error);\n    return [];\n  }\n}\n\n// Get bookmarks by date range\nexport async function getBookmarksByDateRange(startDate, endDate) {\n  try {\n    const bookmarks = await getAllBookmarks();\n    return bookmarks.filter(bookmark => \n      bookmark.dateAdded >= startDate && bookmark.dateAdded <= endDate\n    );\n  } catch (error) {\n    console.error('Error getting bookmarks by date range:', error);\n    return [];\n  }\n}\n\n// Get bookmarks by folder\nexport async function getBookmarksByFolder(folderPath) {\n  try {\n    const bookmarks = await getAllBookmarks();\n    return bookmarks.filter(bookmark => bookmark.folderPath === folderPath);\n  } catch (error) {\n    console.error('Error getting bookmarks by folder:', error);\n    return [];\n  }\n}\n\n// Get unique domains\nexport async function getUniqueDomains() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const domains = [...new Set(bookmarks.map(b => b.domain))];\n    return domains.sort();\n  } catch (error) {\n    console.error('Error getting unique domains:', error);\n    return [];\n  }\n}\n\n// Get unique folders\nexport async function getUniqueFolders() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const folders = [...new Set(bookmarks.map(b => b.folderPath).filter(f => f))];\n    return folders.sort();\n  } catch (error) {\n    console.error('Error getting unique folders:', error);\n    return [];\n  }\n}\n\n// Get domain statistics\nexport async function getDomainStats() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const domainCount = {};\n    \n    bookmarks.forEach(bookmark => {\n      domainCount[bookmark.domain] = (domainCount[bookmark.domain] || 0) + 1;\n    });\n    \n    return Object.entries(domainCount)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 10);\n  } catch (error) {\n    console.error('Error getting domain stats:', error);\n    return [];\n  }\n}\n\n// Get activity timeline\nexport async function getActivityTimeline() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const monthlyCount = {};\n    \n    bookmarks.forEach(bookmark => {\n      const date = new Date(bookmark.dateAdded);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      monthlyCount[monthKey] = (monthlyCount[monthKey] || 0) + 1;\n    });\n    \n    return Object.entries(monthlyCount).sort();\n  } catch (error) {\n    console.error('Error getting activity timeline:', error);\n    return [];\n  }\n}\n\n// Find duplicate bookmarks\nexport async function findDuplicates() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const urlMap = {};\n    \n    bookmarks.forEach(bookmark => {\n      if (!urlMap[bookmark.url]) {\n        urlMap[bookmark.url] = [];\n      }\n      urlMap[bookmark.url].push(bookmark);\n    });\n    \n    // Filter out groups where bookmarks might no longer exist\n    const duplicateGroups = Object.values(urlMap).filter(group => group.length > 1);\n    \n    // Verify bookmarks still exist by checking with Chrome API\n    const validGroups = [];\n    for (const group of duplicateGroups) {\n      const validBookmarks = [];\n      for (const bookmark of group) {\n        try {\n          const exists = await chrome.bookmarks.get([bookmark.id]);\n          if (exists && exists.length > 0) {\n            validBookmarks.push(bookmark);\n          }\n        } catch (e) {\n          // Bookmark doesn't exist anymore, skip it\n          console.log(`Bookmark ${bookmark.id} no longer exists`);\n        }\n      }\n      if (validBookmarks.length > 1) {\n        validGroups.push(validBookmarks);\n      }\n    }\n    \n    return validGroups;\n  } catch (error) {\n    console.error('Error finding duplicates:', error);\n    return [];\n  }\n}\n\n// Find orphaned bookmarks\nexport async function findOrphans() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    return bookmarks.filter(bookmark => \n      !bookmark.folderPath || \n      bookmark.folderPath === 'Bookmarks Bar' ||\n      bookmark.folderPath === 'Other Bookmarks'\n    );\n  } catch (error) {\n    console.error('Error finding orphans:', error);\n    return [];\n  }\n}\n\n// Find malformed URLs\nexport async function findMalformedUrls() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    return bookmarks.filter(bookmark => \n      !bookmark.url.startsWith('http://') && \n      !bookmark.url.startsWith('https://')\n    );\n  } catch (error) {\n    console.error('Error finding malformed URLs:', error);\n    return [];\n  }\n}\n\n// Trigger sync from background script\nexport async function syncBookmarks() {\n  try {\n    return new Promise((resolve, reject) => {\n      chrome.runtime.sendMessage({ action: 'syncBookmarks' }, (response) => {\n        if (response.success) {\n          resolve();\n        } else {\n          reject(new Error(response.error));\n        }\n      });\n    });\n  } catch (error) {\n    console.error('Error syncing bookmarks:', error);\n    throw error;\n  }\n}\n\n// Get bookmarks with pagination for better performance\nexport async function getBookmarksPaginated(page = 0, pageSize = 50, filters = {}) {\n  try {\n    const allBookmarks = await getAllBookmarks();\n    let filteredBookmarks = allBookmarks;\n\n    // Apply multiple filters\n    if (filters.domains && filters.domains.length > 0) {\n      filteredBookmarks = filteredBookmarks.filter(bookmark => \n        filters.domains.includes(bookmark.domain)\n      );\n    }\n\n    if (filters.folders && filters.folders.length > 0) {\n      filteredBookmarks = filteredBookmarks.filter(bookmark => \n        filters.folders.includes(bookmark.folderPath)\n      );\n    }\n\n    if (filters.dateRange) {\n      filteredBookmarks = filteredBookmarks.filter(bookmark => \n        bookmark.dateAdded >= filters.dateRange.startDate && \n        bookmark.dateAdded <= filters.dateRange.endDate\n      );\n    }\n\n    if (filters.searchQuery) {\n      const lowerQuery = filters.searchQuery.toLowerCase();\n      filteredBookmarks = filteredBookmarks.filter(bookmark => \n        bookmark.title.toLowerCase().includes(lowerQuery) ||\n        bookmark.url.toLowerCase().includes(lowerQuery) ||\n        bookmark.domain.toLowerCase().includes(lowerQuery)\n      );\n    }\n\n    // Sort by date added (newest first)\n    filteredBookmarks.sort((a, b) => b.dateAdded - a.dateAdded);\n\n    const startIndex = page * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedBookmarks = filteredBookmarks.slice(startIndex, endIndex);\n\n    return {\n      bookmarks: paginatedBookmarks,\n      totalCount: filteredBookmarks.length,\n      hasMore: endIndex < filteredBookmarks.length,\n      currentPage: page\n    };\n  } catch (error) {\n    console.error('Error getting paginated bookmarks:', error);\n    return {\n      bookmarks: [],\n      totalCount: 0,\n      hasMore: false,\n      currentPage: 0\n    };\n  }\n}\n\n// Get domains sorted by recency (most recent bookmark first)\nexport async function getDomainsByRecency() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const domainLatest = {};\n    \n    bookmarks.forEach(bookmark => {\n      if (!domainLatest[bookmark.domain] || bookmark.dateAdded > domainLatest[bookmark.domain].dateAdded) {\n        domainLatest[bookmark.domain] = {\n          domain: bookmark.domain,\n          dateAdded: bookmark.dateAdded,\n          count: 0\n        };\n      }\n    });\n\n    // Count bookmarks per domain\n    bookmarks.forEach(bookmark => {\n      domainLatest[bookmark.domain].count++;\n    });\n    \n    return Object.values(domainLatest)\n      .sort((a, b) => b.dateAdded - a.dateAdded);\n  } catch (error) {\n    console.error('Error getting domains by recency:', error);\n    return [];\n  }\n}\n\n// Get domains sorted by bookmark count (most bookmarks first)\nexport async function getDomainsByCount() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const domainCount = {};\n    const domainLatest = {};\n    \n    bookmarks.forEach(bookmark => {\n      domainCount[bookmark.domain] = (domainCount[bookmark.domain] || 0) + 1;\n      if (!domainLatest[bookmark.domain] || bookmark.dateAdded > domainLatest[bookmark.domain]) {\n        domainLatest[bookmark.domain] = bookmark.dateAdded;\n      }\n    });\n    \n    return Object.entries(domainCount)\n      .map(([domain, count]) => ({\n        domain,\n        count,\n        latestDate: domainLatest[domain]\n      }))\n      .sort((a, b) => b.count - a.count);\n  } catch (error) {\n    console.error('Error getting domains by count:', error);\n    return [];\n  }\n}\n\n// Delete a single bookmark\nexport async function deleteBookmark(bookmarkId) {\n  try {\n    // Delete from Chrome bookmarks API\n    await chrome.bookmarks.remove(bookmarkId);\n    \n    // Remove from our local storage cache\n    const result = await chrome.storage.local.get(['bookmarks']);\n    const bookmarks = result.bookmarks || [];\n    const updatedBookmarks = bookmarks.filter(b => b.id !== bookmarkId);\n    await chrome.storage.local.set({ bookmarks: updatedBookmarks });\n    \n    return true;\n  } catch (error) {\n    console.error('Error deleting bookmark:', error);\n    throw error;\n  }\n}\n\n// Delete multiple bookmarks\nexport async function deleteBookmarks(bookmarkIds) {\n  try {\n    const errors = [];\n    \n    // Delete each bookmark from Chrome bookmarks API\n    for (const id of bookmarkIds) {\n      try {\n        await chrome.bookmarks.remove(id);\n      } catch (error) {\n        console.error(`Error deleting bookmark ${id}:`, error);\n        errors.push({ id, error: error.message });\n      }\n    }\n    \n    // Remove from our local storage cache\n    const result = await chrome.storage.local.get(['bookmarks']);\n    const bookmarks = result.bookmarks || [];\n    const updatedBookmarks = bookmarks.filter(b => !bookmarkIds.includes(b.id));\n    await chrome.storage.local.set({ bookmarks: updatedBookmarks });\n    \n    return {\n      success: bookmarkIds.length - errors.length,\n      errors: errors\n    };\n  } catch (error) {\n    console.error('Error deleting bookmarks:', error);\n    throw error;\n  }\n}\n","<script>\n  import { createEventDispatcher, onMount } from 'svelte';\n  import { getDomainsByRecency, getDomainsByCount, getUniqueFolders } from './database.js';\n  \n  const dispatch = createEventDispatcher();\n  \n  let domainsByRecency = [];\n  let domainsByCount = [];\n  let folders = [];\n  let selectedFilters = {\n    domains: [],\n    folders: [],\n    dateRange: null\n  };\n  let domainSortMode = 'recency'; // 'recency' or 'count'\n  \n  onMount(async () => {\n    try {\n      await loadDomains();\n      folders = await getUniqueFolders();\n    } catch (error) {\n      console.error('Error loading filters:', error);\n    }\n  });\n\n  async function loadDomains() {\n    domainsByRecency = await getDomainsByRecency();\n    domainsByCount = await getDomainsByCount();\n  }\n\n  $: currentDomains = domainSortMode === 'recency' ? domainsByRecency : domainsByCount;\n  \n  function toggleDomainFilter(domain) {\n    if (selectedFilters.domains.includes(domain)) {\n      selectedFilters.domains = selectedFilters.domains.filter(d => d !== domain);\n    } else {\n      selectedFilters.domains = [...selectedFilters.domains, domain];\n    }\n    dispatchFilters();\n  }\n\n  function toggleFolderFilter(folder) {\n    if (selectedFilters.folders.includes(folder)) {\n      selectedFilters.folders = selectedFilters.folders.filter(f => f !== folder);\n    } else {\n      selectedFilters.folders = [...selectedFilters.folders, folder];\n    }\n    dispatchFilters();\n  }\n\n  function setDateFilter(startDate, endDate, period) {\n    selectedFilters.dateRange = { startDate, endDate, period };\n    dispatchFilters();\n  }\n  \n  function clearFilters() {\n    selectedFilters = {\n      domains: [],\n      folders: [],\n      dateRange: null\n    };\n    dispatchFilters();\n  }\n\n  function dispatchFilters() {\n    dispatch('filter', selectedFilters);\n  }\n\n  function hasActiveFilters() {\n    return selectedFilters.domains.length > 0 || \n           selectedFilters.folders.length > 0 || \n           selectedFilters.dateRange !== null;\n  }\n  \n  function applyDateFilter(period) {\n    const now = new Date();\n    let startDate;\n    \n    switch (period) {\n      case 'week':\n        startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n        break;\n      case 'month':\n        startDate = new Date(now.getFullYear(), now.getMonth(), 1);\n        break;\n      case 'year':\n        startDate = new Date(now.getFullYear(), 0, 1);\n        break;\n    }\n    \n    setDateFilter(startDate.getTime(), now.getTime(), period);\n  }\n\n  function formatTimeAgo(timestamp) {\n    const now = Date.now();\n    const diff = now - timestamp;\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    \n    if (days === 0) return 'Today';\n    if (days === 1) return '1 day ago';\n    if (days < 7) return `${days} days ago`;\n    if (days < 30) return `${Math.floor(days / 7)} weeks ago`;\n    if (days < 365) return `${Math.floor(days / 30)} months ago`;\n    return `${Math.floor(days / 365)} years ago`;\n  }\n</script>\n\n<div class=\"w-64 bg-gray-50 border-r border-gray-200 p-4 overflow-y-auto flex-shrink-0\">\n  <div class=\"mb-6\">\n    <div class=\"flex items-center justify-between mb-3\">\n      <h3 class=\"text-sm font-medium text-gray-900\">Filters</h3>\n      {#if hasActiveFilters()}\n        <button\n          on:click={clearFilters}\n          class=\"text-xs text-blue-600 hover:text-blue-800\"\n        >\n          Clear All\n        </button>\n      {/if}\n    </div>\n    \n    <!-- Active Filters Display -->\n    {#if hasActiveFilters()}\n      <div class=\"mb-4 space-y-2\">\n        {#each selectedFilters.domains as domain}\n          <div class=\"flex items-center justify-between p-2 bg-blue-50 rounded-md\">\n            <div class=\"text-xs text-blue-800\">Domain: {domain}</div>\n            <button \n              on:click={() => toggleDomainFilter(domain)}\n              class=\"text-blue-600 hover:text-blue-800\"\n            >\n              ×\n            </button>\n          </div>\n        {/each}\n        {#each selectedFilters.folders as folder}\n          <div class=\"flex items-center justify-between p-2 bg-green-50 rounded-md\">\n            <div class=\"text-xs text-green-800\">Folder: {folder}</div>\n            <button \n              on:click={() => toggleFolderFilter(folder)}\n              class=\"text-green-600 hover:text-green-800\"\n            >\n              ×\n            </button>\n          </div>\n        {/each}\n        {#if selectedFilters.dateRange}\n          <div class=\"flex items-center justify-between p-2 bg-purple-50 rounded-md\">\n            <div class=\"text-xs text-purple-800\">\n              {selectedFilters.dateRange.period === 'week' ? 'This Week' : \n               selectedFilters.dateRange.period === 'month' ? 'This Month' : 'This Year'}\n            </div>\n            <button \n              on:click={() => { selectedFilters.dateRange = null; dispatchFilters(); }}\n              class=\"text-purple-600 hover:text-purple-800\"\n            >\n              ×\n            </button>\n          </div>\n        {/if}\n      </div>\n    {/if}\n  </div>\n  \n  <!-- Date Filters -->\n  <div class=\"mb-6\">\n    <h4 class=\"text-xs font-medium text-gray-700 uppercase tracking-wide mb-2\">\n      Date Added\n    </h4>\n    <div class=\"space-y-1\">\n      <button\n        on:click={() => applyDateFilter('week')}\n        class=\"w-full text-left px-2 py-1 text-sm text-gray-600 hover:bg-gray-100 rounded\"\n        class:bg-blue-50={selectedFilters.dateRange?.period === 'week'}\n        class:text-blue-700={selectedFilters.dateRange?.period === 'week'}\n      >\n        This Week\n      </button>\n      <button\n        on:click={() => applyDateFilter('month')}\n        class=\"w-full text-left px-2 py-1 text-sm text-gray-600 hover:bg-gray-100 rounded\"\n        class:bg-blue-50={selectedFilters.dateRange?.period === 'month'}\n        class:text-blue-700={selectedFilters.dateRange?.period === 'month'}\n      >\n        This Month\n      </button>\n      <button\n        on:click={() => applyDateFilter('year')}\n        class=\"w-full text-left px-2 py-1 text-sm text-gray-600 hover:bg-gray-100 rounded\"\n        class:bg-blue-50={selectedFilters.dateRange?.period === 'year'}\n        class:text-blue-700={selectedFilters.dateRange?.period === 'year'}\n      >\n        This Year\n      </button>\n    </div>\n  </div>\n  \n  <!-- Domain Filters -->\n  <div class=\"mb-6\">\n    <div class=\"flex items-center justify-between mb-2\">\n      <h4 class=\"text-xs font-medium text-gray-700 uppercase tracking-wide\">\n        Domains ({currentDomains.length})\n      </h4>\n      <div class=\"flex space-x-1\">\n        <button\n          on:click={() => domainSortMode = 'recency'}\n          class=\"text-xs px-2 py-1 rounded\"\n          class:bg-blue-100={domainSortMode === 'recency'}\n          class:text-blue-700={domainSortMode === 'recency'}\n          class:text-gray-500={domainSortMode !== 'recency'}\n          title=\"Sort by most recent bookmark\"\n        >\n          Recent\n        </button>\n        <button\n          on:click={() => domainSortMode = 'count'}\n          class=\"text-xs px-2 py-1 rounded\"\n          class:bg-blue-100={domainSortMode === 'count'}\n          class:text-blue-700={domainSortMode === 'count'}\n          class:text-gray-500={domainSortMode !== 'count'}\n          title=\"Sort by bookmark count\"\n        >\n          Count\n        </button>\n      </div>\n    </div>\n    <div class=\"space-y-1 max-h-64 overflow-y-auto\">\n      {#each currentDomains.slice(0, 30) as domainData}\n        <button\n          on:click={() => toggleDomainFilter(domainData.domain)}\n          class=\"w-full text-left px-2 py-2 text-sm hover:bg-gray-100 rounded border\"\n          class:bg-blue-50={selectedFilters.domains.includes(domainData.domain)}\n          class:text-blue-700={selectedFilters.domains.includes(domainData.domain)}\n          class:border-blue-200={selectedFilters.domains.includes(domainData.domain)}\n          class:text-gray-600={!selectedFilters.domains.includes(domainData.domain)}\n          class:border-transparent={!selectedFilters.domains.includes(domainData.domain)}\n          title={domainData.domain}\n        >\n          <div class=\"truncate font-medium\">{domainData.domain}</div>\n          <div class=\"flex justify-between items-center text-xs text-gray-500 mt-1\">\n            <span>{domainData.count} bookmark{domainData.count !== 1 ? 's' : ''}</span>\n            {#if domainSortMode === 'recency'}\n              <span>{formatTimeAgo(domainData.dateAdded || domainData.latestDate)}</span>\n            {/if}\n          </div>\n        </button>\n      {/each}\n      {#if currentDomains.length > 30}\n        <div class=\"text-xs text-gray-400 px-2 py-1\">\n          ... and {currentDomains.length - 30} more\n        </div>\n      {/if}\n    </div>\n  </div>\n  \n  <!-- Folder Filters -->\n  <div class=\"mb-6\">\n    <h4 class=\"text-xs font-medium text-gray-700 uppercase tracking-wide mb-2\">\n      Folders ({folders.length})\n    </h4>\n    <div class=\"space-y-1 max-h-48 overflow-y-auto\">\n      {#each folders.slice(0, 15) as folder}\n        <button\n          on:click={() => toggleFolderFilter(folder)}\n          class=\"w-full text-left px-2 py-1 text-sm hover:bg-gray-100 rounded border\"\n          class:bg-green-50={selectedFilters.folders.includes(folder)}\n          class:text-green-700={selectedFilters.folders.includes(folder)}\n          class:border-green-200={selectedFilters.folders.includes(folder)}\n          class:text-gray-600={!selectedFilters.folders.includes(folder)}\n          class:border-transparent={!selectedFilters.folders.includes(folder)}\n          title={folder}\n        >\n          <span class=\"truncate\">📁 {folder}</span>\n        </button>\n      {/each}\n      {#if folders.length > 15}\n        <div class=\"text-xs text-gray-400 px-2 py-1\">\n          ... and {folders.length - 15} more\n        </div>\n      {/if}\n    </div>\n  </div>\n</div>\n","<script>\n  import { onMount } from 'svelte';\n  import { Chart, registerables } from 'chart.js';\n  import BookmarkCard from './BookmarkCard.svelte';\n  import BookmarkListItem from './BookmarkListItem.svelte';\n  import SearchBar from './SearchBar.svelte';\n  import Sidebar from './Sidebar.svelte';\n  import { \n    searchBookmarks, \n    getBookmarksPaginated, \n    getBookmarksByDomain, \n    getBookmarksByDateRange, \n    getBookmarksByFolder,\n    getDomainStats,\n    getActivityTimeline,\n    findDuplicates,\n    findOrphans,\n    findMalformedUrls,\n    deleteBookmark,\n    deleteBookmarks\n  } from './database.js';\n  \n  Chart.register(...registerables);\n  \n  let bookmarks = [];\n  let loading = true;\n  let error = null;\n  let currentView = 'bookmarks'; // bookmarks, insights, health\n  let searchQuery = '';\n  \n  // Pagination variables\n  let currentPage = 0;\n  let totalCount = 0;\n  let hasMore = false;\n  let pageSize = 50;\n  \n  // Filter state\n  let currentFilters = {\n    domains: [],\n    folders: [],\n    dateRange: null,\n    searchQuery: ''\n  };\n  \n  // Chart variables\n  let domainChart = null;\n  let activityChart = null;\n  \n  // Health data\n  let duplicates = [];\n  let orphans = [];\n  let malformedUrls = [];\n  \n  // Multi-select state\n  let selectedBookmarks = new Set();\n  let multiSelectMode = false;\n  let viewMode = 'list'; // 'list' or 'card'\n  \n  onMount(async () => {\n    try {\n      await loadBookmarksPaginated();\n      if (currentView === 'insights') {\n        await loadInsights();\n      } else if (currentView === 'health') {\n        await loadHealthData();\n      }\n    } catch (err) {\n      error = err.message;\n    } finally {\n      loading = false;\n    }\n  });\n  \n  async function loadBookmarksPaginated(page = 0, append = false) {\n    try {\n      const filters = { ...currentFilters };\n      const result = await getBookmarksPaginated(page, pageSize, filters);\n      \n      if (append) {\n        bookmarks = [...bookmarks, ...result.bookmarks];\n      } else {\n        bookmarks = result.bookmarks;\n      }\n      \n      currentPage = result.currentPage;\n      totalCount = result.totalCount;\n      hasMore = result.hasMore;\n    } catch (err) {\n      console.error('Error loading bookmarks:', err);\n      throw err;\n    }\n  }\n\n  async function loadMoreBookmarks() {\n    if (!hasMore || loading) return;\n    \n    try {\n      loading = true;\n      await loadBookmarksPaginated(currentPage + 1, true);\n    } catch (err) {\n      error = err.message;\n    } finally {\n      loading = false;\n    }\n  }\n  \n  async function handleSearch(event) {\n    const query = event.detail.query;\n    searchQuery = query;\n    currentFilters.searchQuery = query;\n    \n    try {\n      loading = true;\n      currentPage = 0;\n      await loadBookmarksPaginated();\n    } catch (err) {\n      error = err.message;\n    } finally {\n      loading = false;\n    }\n  }\n  \n  async function handleFilter(event) {\n    const filters = event.detail;\n    currentFilters = { ...currentFilters, ...filters };\n    \n    try {\n      loading = true;\n      currentPage = 0;\n      await loadBookmarksPaginated();\n    } catch (err) {\n      error = err.message;\n    } finally {\n      loading = false;\n    }\n  }\n  \n  async function switchView(view) {\n    currentView = view;\n    loading = true;\n    \n    try {\n      if (view === 'bookmarks') {\n        currentPage = 0;\n        await loadBookmarksPaginated();\n      } else if (view === 'insights') {\n        await loadInsights();\n      } else if (view === 'health') {\n        await loadHealthData();\n      }\n    } catch (err) {\n      error = err.message;\n    } finally {\n      loading = false;\n    }\n  }\n  \n  async function loadInsights() {\n    try {\n      const domainStats = await getDomainStats();\n      const activityTimeline = await getActivityTimeline();\n      \n      // Create domain chart\n      setTimeout(() => {\n        const domainCtx = document.getElementById('domainChart');\n        if (domainCtx) {\n          if (domainChart) domainChart.destroy();\n          domainChart = new Chart(domainCtx, {\n            type: 'bar',\n            data: {\n              labels: domainStats.map(([domain]) => domain),\n              datasets: [{\n                label: 'Bookmarks',\n                data: domainStats.map(([, count]) => count),\n                backgroundColor: 'rgba(59, 130, 246, 0.5)',\n                borderColor: 'rgba(59, 130, 246, 1)',\n                borderWidth: 1\n              }]\n            },\n            options: {\n              responsive: true,\n              plugins: {\n                title: {\n                  display: true,\n                  text: 'Top 10 Domains'\n                }\n              },\n              scales: {\n                y: {\n                  beginAtZero: true\n                }\n              }\n            }\n          });\n        }\n        \n        // Create activity chart\n        const activityCtx = document.getElementById('activityChart');\n        if (activityCtx) {\n          if (activityChart) activityChart.destroy();\n          activityChart = new Chart(activityCtx, {\n            type: 'line',\n            data: {\n              labels: activityTimeline.map(([month]) => month),\n              datasets: [{\n                label: 'Bookmarks Added',\n                data: activityTimeline.map(([, count]) => count),\n                fill: false,\n                borderColor: 'rgba(34, 197, 94, 1)',\n                backgroundColor: 'rgba(34, 197, 94, 0.1)',\n                tension: 0.1\n              }]\n            },\n            options: {\n              responsive: true,\n              plugins: {\n                title: {\n                  display: true,\n                  text: 'Bookmark Activity Timeline'\n                }\n              },\n              scales: {\n                y: {\n                  beginAtZero: true\n                }\n              }\n            }\n          });\n        }\n      }, 100);\n    } catch (err) {\n      console.error('Error loading insights:', err);\n    }\n  }\n  \n  async function loadHealthData() {\n    try {\n      duplicates = await findDuplicates();\n      orphans = await findOrphans();\n      malformedUrls = await findMalformedUrls();\n    } catch (err) {\n      console.error('Error loading health data:', err);\n    }\n  }\n  \n  async function deleteDuplicate(bookmarkId) {\n    try {\n      // First check if the bookmark still exists\n      const existingBookmarks = await chrome.bookmarks.get([bookmarkId]);\n      if (existingBookmarks && existingBookmarks.length > 0) {\n        await chrome.bookmarks.remove(bookmarkId);\n        console.log(`Deleted bookmark: ${bookmarkId}`);\n      } else {\n        console.log(`Bookmark ${bookmarkId} no longer exists`);\n      }\n      // Reload health data\n      await loadHealthData();\n    } catch (err) {\n      console.error('Error deleting bookmark:', err);\n      // Still reload health data to refresh the list\n      await loadHealthData();\n    }\n  }\n  \n  function toggleMultiSelectMode() {\n    multiSelectMode = !multiSelectMode;\n    if (!multiSelectMode) {\n      selectedBookmarks.clear();\n      selectedBookmarks = selectedBookmarks;\n    }\n  }\n  \n  function handleToggleSelect(event) {\n    const { bookmarkId, selected } = event.detail;\n    if (selected) {\n      selectedBookmarks.add(bookmarkId);\n    } else {\n      selectedBookmarks.delete(bookmarkId);\n    }\n    selectedBookmarks = selectedBookmarks;\n  }\n  \n  function selectAllBookmarks() {\n    selectedBookmarks = new Set(bookmarks.map(b => b.id));\n  }\n  \n  function deselectAllBookmarks() {\n    selectedBookmarks.clear();\n    selectedBookmarks = selectedBookmarks;\n  }\n  \n  async function deleteSelectedBookmarks() {\n    if (selectedBookmarks.size === 0) return;\n    \n    if (!confirm(`Are you sure you want to delete ${selectedBookmarks.size} bookmark(s)?`)) {\n      return;\n    }\n    \n    try {\n      loading = true;\n      const bookmarkIds = Array.from(selectedBookmarks);\n      const result = await deleteBookmarks(bookmarkIds);\n      \n      if (result.errors.length > 0) {\n        console.error('Some bookmarks could not be deleted:', result.errors);\n        alert(`${result.success} bookmarks deleted successfully. ${result.errors.length} failed.`);\n      } else {\n        alert(`${result.success} bookmarks deleted successfully.`);\n      }\n      \n      // Clear selections and reload\n      selectedBookmarks.clear();\n      selectedBookmarks = selectedBookmarks;\n      multiSelectMode = false;\n      \n      // Reload bookmarks\n      currentPage = 0;\n      await loadBookmarksPaginated();\n    } catch (err) {\n      console.error('Error deleting bookmarks:', err);\n      alert('Error deleting bookmarks. Please try again.');\n    } finally {\n      loading = false;\n    }\n  }\n  \n  async function handleDeleteSingle(event) {\n    const { bookmarkId } = event.detail;\n    \n    if (!confirm('Are you sure you want to delete this bookmark?')) {\n      return;\n    }\n    \n    try {\n      await deleteBookmark(bookmarkId);\n      // Reload bookmarks to refresh the list\n      currentPage = 0;\n      await loadBookmarksPaginated();\n    } catch (err) {\n      console.error('Error deleting bookmark:', err);\n      alert('Error deleting bookmark. Please try again.');\n    }\n  }\n  \n  function toggleViewMode() {\n    viewMode = viewMode === 'list' ? 'card' : 'list';\n  }\n</script>\n\n<svelte:head>\n  <title>Bookmark Insight Dashboard</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">\n</svelte:head>\n\n<div class=\"min-h-screen bg-gray-50\">\n  <!-- Header -->\n  <header class=\"bg-white shadow-sm border-b border-gray-200\">\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <div class=\"flex justify-between items-center py-4\">\n        <div class=\"flex items-center space-x-4\">\n          <h1 class=\"text-2xl font-bold text-gray-900\">Bookmark Insight</h1>\n        </div>\n        \n        <!-- Navigation -->\n        <nav class=\"flex space-x-4\">\n          <button\n            on:click={() => switchView('bookmarks')}\n            class=\"px-4 py-2 rounded-md text-sm font-medium\"\n            class:bg-blue-100={currentView === 'bookmarks'}\n            class:text-blue-700={currentView === 'bookmarks'}\n            class:text-gray-500={currentView !== 'bookmarks'}\n            class:hover:text-gray-700={currentView !== 'bookmarks'}\n          >\n            Bookmarks\n          </button>\n          <button\n            on:click={() => switchView('insights')}\n            class=\"px-4 py-2 rounded-md text-sm font-medium\"\n            class:bg-blue-100={currentView === 'insights'}\n            class:text-blue-700={currentView === 'insights'}\n            class:text-gray-500={currentView !== 'insights'}\n            class:hover:text-gray-700={currentView !== 'insights'}\n          >\n            Insights\n          </button>\n          <button\n            on:click={() => switchView('health')}\n            class=\"px-4 py-2 rounded-md text-sm font-medium\"\n            class:bg-blue-100={currentView === 'health'}\n            class:text-blue-700={currentView === 'health'}\n            class:text-gray-500={currentView !== 'health'}\n            class:hover:text-gray-700={currentView !== 'health'}\n          >\n            Health\n          </button>\n        </nav>\n      </div>\n    </div>\n  </header>\n  \n  <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n    {#if currentView === 'bookmarks'}\n      <div class=\"mb-6\">\n        <SearchBar on:search={handleSearch} />\n      </div>\n      \n      <div class=\"flex gap-6 min-h-0\">\n        <div class=\"flex-shrink-0\">\n          <Sidebar on:filter={handleFilter} />\n        </div>\n        \n        <div class=\"flex-1 min-w-0 overflow-hidden\">\n          {#if loading}\n            <div class=\"flex items-center justify-center h-64\">\n              <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n            </div>\n          {:else if error}\n            <div class=\"text-center text-red-600 p-8\">\n              <p>Error: {error}</p>\n              <button\n                on:click={() => loadBookmarksPaginated()}\n                class=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n              >\n                Retry\n              </button>\n            </div>\n          {:else if bookmarks.length === 0}\n            <div class=\"text-center text-gray-500 p-8\">\n              {#if searchQuery}\n                <p>No bookmarks found for \"{searchQuery}\"</p>\n              {:else}\n                <p>No bookmarks found</p>\n              {/if}\n            </div>\n          {:else}\n            <div class=\"mb-4 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n              <h2 class=\"text-lg font-medium text-gray-900\">\n                {totalCount} bookmark{totalCount !== 1 ? 's' : ''}\n                {#if currentFilters.domains.length > 0 || currentFilters.folders.length > 0 || currentFilters.dateRange || currentFilters.searchQuery}\n                  <span class=\"text-sm text-gray-500\">\n                    (filtered)\n                  </span>\n                {/if}\n              </h2>\n              <div class=\"flex flex-wrap items-center gap-2 sm:gap-4\">\n                <div class=\"text-sm text-gray-500\">\n                  Showing {bookmarks.length} of {totalCount}\n                </div>\n                \n                <!-- View Mode Toggle -->\n                <button\n                  on:click={toggleViewMode}\n                  class=\"p-2 text-gray-500 hover:text-gray-700 border border-gray-300 rounded-md\"\n                  title=\"Toggle view mode\"\n                >\n                  {#if viewMode === 'list'}\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"></path>\n                    </svg>\n                  {:else}\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"></path>\n                    </svg>\n                  {/if}\n                </button>\n                \n                <!-- Multi-Select Toggle -->\n                <button\n                  on:click={toggleMultiSelectMode}\n                  class=\"px-3 py-2 text-sm border border-gray-300 rounded-md hover:bg-gray-50\"\n                  class:bg-blue-50={multiSelectMode}\n                  class:border-blue-300={multiSelectMode}\n                  class:text-blue-700={multiSelectMode}\n                >\n                  {multiSelectMode ? 'Cancel' : 'Select'}\n                </button>\n              </div>\n            </div>\n            \n            <!-- Multi-Select Toolbar -->\n            {#if multiSelectMode}\n              <div class=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-md\">\n                <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3\">\n                  <div class=\"flex flex-wrap items-center gap-2 sm:gap-4\">\n                    <span class=\"text-sm text-blue-700\">\n                      {selectedBookmarks.size} selected\n                    </span>\n                    <button\n                      on:click={selectAllBookmarks}\n                      class=\"text-sm text-blue-600 hover:text-blue-800\"\n                    >\n                      Select All\n                    </button>\n                    <button\n                      on:click={deselectAllBookmarks}\n                      class=\"text-sm text-blue-600 hover:text-blue-800\"\n                    >\n                      Deselect All\n                    </button>\n                  </div>\n                  <button\n                    on:click={deleteSelectedBookmarks}\n                    disabled={selectedBookmarks.size === 0}\n                    class=\"px-4 py-2 bg-red-600 text-white text-sm rounded-md hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed self-start sm:self-auto\"\n                  >\n                    Delete Selected\n                  </button>\n                </div>\n              </div>\n            {/if}\n            \n            <!-- Bookmarks Display -->\n            {#if viewMode === 'list'}\n              <div class=\"bg-white rounded-lg shadow overflow-hidden\">\n                <div class=\"max-w-full overflow-x-auto\">\n                  {#each bookmarks as bookmark (bookmark.id)}\n                    <BookmarkListItem \n                      {bookmark} \n                      {multiSelectMode}\n                      isSelected={selectedBookmarks.has(bookmark.id)}\n                      on:toggle-select={handleToggleSelect}\n                      on:delete={handleDeleteSingle}\n                    />\n                  {/each}\n                </div>\n              </div>\n            {:else}\n              <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {#each bookmarks as bookmark (bookmark.id)}\n                  <BookmarkCard {bookmark} />\n                {/each}\n              </div>\n            {/if}\n\n            <!-- Load More Button -->\n            {#if hasMore}\n              <div class=\"mt-8 text-center\">\n                <button\n                  on:click={loadMoreBookmarks}\n                  disabled={loading}\n                  class=\"px-6 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {#if loading}\n                    <div class=\"flex items-center\">\n                      <div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      Loading...\n                    </div>\n                  {:else}\n                    Load More\n                  {/if}\n                </button>\n              </div>\n            {/if}\n          {/if}\n        </div>\n      </div>\n    {:else if currentView === 'insights'}\n      <div class=\"space-y-8\">\n        {#if loading}\n          <div class=\"flex items-center justify-center h-64\">\n            <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n          </div>\n        {:else}\n          <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <div class=\"bg-white p-6 rounded-lg shadow\">\n              <canvas id=\"domainChart\" width=\"400\" height=\"300\"></canvas>\n            </div>\n            <div class=\"bg-white p-6 rounded-lg shadow\">\n              <canvas id=\"activityChart\" width=\"400\" height=\"300\"></canvas>\n            </div>\n          </div>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div class=\"bg-white p-6 rounded-lg shadow text-center\">\n              <div class=\"text-3xl font-bold text-blue-600\">{bookmarks.length}</div>\n              <div class=\"text-gray-500\">Total Bookmarks</div>\n            </div>\n            <div class=\"bg-white p-6 rounded-lg shadow text-center\">\n              <div class=\"text-3xl font-bold text-green-600\">{duplicates.length}</div>\n              <div class=\"text-gray-500\">Duplicate Groups</div>\n            </div>\n            <div class=\"bg-white p-6 rounded-lg shadow text-center\">\n              <div class=\"text-3xl font-bold text-orange-600\">{orphans.length}</div>\n              <div class=\"text-gray-500\">Orphaned Bookmarks</div>\n            </div>\n          </div>\n        {/if}\n      </div>\n    {:else if currentView === 'health'}\n      <div class=\"space-y-8\">\n        {#if loading}\n          <div class=\"flex items-center justify-center h-64\">\n            <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n          </div>\n        {:else}\n          <!-- Duplicates -->\n          <div class=\"bg-white rounded-lg shadow\">\n            <div class=\"px-6 py-4 border-b border-gray-200\">\n              <h3 class=\"text-lg font-medium text-gray-900\">\n                Duplicate Bookmarks ({duplicates.length} groups)\n              </h3>\n            </div>\n            <div class=\"p-6\">\n              {#if duplicates.length === 0}\n                <p class=\"text-gray-500\">No duplicate bookmarks found.</p>\n              {:else}\n                <div class=\"space-y-6\">\n                  {#each duplicates as group}\n                    <div class=\"border border-gray-200 rounded-lg p-4\">\n                      <h4 class=\"font-medium text-gray-900 mb-3\">\n                        {group[0].url}\n                      </h4>\n                      <div class=\"space-y-2\">\n                        {#each group as bookmark, index}\n                          <div class=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                            <div class=\"flex-1\">\n                              <div class=\"text-sm font-medium\">{bookmark.title}</div>\n                              <div class=\"text-xs text-gray-500\">\n                                {bookmark.folderPath || 'No folder'}\n                              </div>\n                            </div>\n                            {#if index > 0}\n                              <button\n                                on:click={() => deleteDuplicate(bookmark.id)}\n                                class=\"ml-4 px-3 py-1 text-xs bg-red-600 text-white rounded hover:bg-red-700\"\n                              >\n                                Delete\n                              </button>\n                            {/if}\n                          </div>\n                        {/each}\n                      </div>\n                    </div>\n                  {/each}\n                </div>\n              {/if}\n            </div>\n          </div>\n          \n          <!-- Orphans -->\n          <div class=\"bg-white rounded-lg shadow\">\n            <div class=\"px-6 py-4 border-b border-gray-200\">\n              <h3 class=\"text-lg font-medium text-gray-900\">\n                Orphaned Bookmarks ({orphans.length})\n              </h3>\n            </div>\n            <div class=\"p-6\">\n              {#if orphans.length === 0}\n                <p class=\"text-gray-500\">No orphaned bookmarks found.</p>\n              {:else}\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {#each orphans as bookmark}\n                    <BookmarkCard {bookmark} />\n                  {/each}\n                </div>\n              {/if}\n            </div>\n          </div>\n          \n          <!-- Malformed URLs -->\n          <div class=\"bg-white rounded-lg shadow\">\n            <div class=\"px-6 py-4 border-b border-gray-200\">\n              <h3 class=\"text-lg font-medium text-gray-900\">\n                Malformed URLs ({malformedUrls.length})\n              </h3>\n            </div>\n            <div class=\"p-6\">\n              {#if malformedUrls.length === 0}\n                <p class=\"text-gray-500\">No malformed URLs found.</p>\n              {:else}\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {#each malformedUrls as bookmark}\n                    <BookmarkCard {bookmark} />\n                  {/each}\n                </div>\n              {/if}\n            </div>\n          </div>\n        {/if}\n      </div>\n    {/if}\n  </div>\n</div>\n","import Dashboard from './Dashboard.svelte';\n\nconst app = new Dashboard({\n  target: document.body\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","globals","window","globalThis","global","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","CustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","ensure_array_like","array_like_or_iterator","undefined","Array","from","outro_and_destroy_block","lookup","key","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","updates","child_ctx","get","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","new_on_destroy","map","filter","on_destroy","destroy_component","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","root","ready","ret","rest","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","this","$on","index","splice","$set","obj","keys","round","v","__svelte","lim","h","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","hexString","g","isShort","alpha","HUE_RE","hsl2rgbn","s","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","hsl2rgb","hue","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","modHSL","ratio","tmp","clone","proto","assign","fromObject","functionParse","charAt","rgbParse","Color","constructor","len","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","uid","id","isNullOrUndef","prototype","toString","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","klen","isValidKey","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_arrayUnique","items","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","join","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","clipSelf","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","t1_value","folderPath","p_title_value","t1","t3_value","t5_value","getDomainLabel","formatDate","dateAdded","if_block","create_if_block","img","img_src_value","getFaviconUrl","h3","h3_title_value","div3","div2","div1","div0","span0","span1","t3","t5","t7","t7_value","timestamp","toLocaleDateString","openBookmark","chrome","tabs","bookmark","firstLetter","domain","$$props","t2_value","t4_value","t6_value","create_if_block_1","if_block1","div6","div5","div4","span2","button","t2","t4","t6","t9","t9_value","isSelected","multiSelectMode","dispatch","handleTitleClick","bookmarkId","selected","checked","stopPropagation","debounceTimer","$$invalidate","query","async","getAllBookmarks","bookmarks","t0_value","dateRange","period","t0","t_value","formatTimeAgo","latestDate","create_if_block_2","button_title_value","domains","div","folders","t13_value","t23_value","each_value_3","each_value_2","create_if_block_4","each_value_1","each_value","button0","button1","button2","button3","button4","div10","h40","div7","h41","div9","h42","div8","t13","t23","days","domainsByRecency","domainsByCount","selectedFilters","domainSortMode","toggleDomainFilter","dispatchFilters","toggleFolderFilter","folder","applyDateFilter","startDate","getTime","getFullYear","getMonth","endDate","setDateFilter","domainLatest","getDomainsByRecency","domainCount","getDomainsByCount","loadDomains","getUniqueFolders","currentDomains","domainData","create_if_block_12","t11_value","create_if_block_17","h30","h31","h32","t11","create_if_block_18","h4","each_blocks","t10_value","div12","div11","t10","searchQuery","create_if_block_10","create_if_block_9","create_if_block_8","create_if_block_5","svg","bookmarklistitem_changes","create_if_block_6","document_1","link","header","nav","loading","currentView","currentPage","totalCount","hasMore","currentFilters","domainChart","activityChart","duplicates","orphans","malformedUrls","selectedBookmarks","viewMode","loadBookmarksPaginated","page","filters","pageSize","filteredBookmarks","lowerQuery","getBookmarksPaginated","err","switchView","view","loadInsights","loadHealthData","message","domainStats","getDomainStats","activityTimeline","monthlyCount","monthKey","padStart","getActivityTimeline","domainCtx","activityCtx","urlMap","duplicateGroups","group","validGroups","validBookmarks","exists","log","findDuplicates","findOrphans","findMalformedUrls","deleteDuplicate","existingBookmarks","confirm","bookmarkIds","errors","updatedBookmarks","success","deleteBookmarks","alert","deleteBookmark","app"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}