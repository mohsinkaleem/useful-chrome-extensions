{"version":3,"file":"dashboard.js","sources":["../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/globals.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../node_modules/svelte/src/shared/version.js","../node_modules/chart.js/dist/chunks/helpers.dataset.js","../node_modules/chart.js/dist/chart.js","../src/BookmarkCard.svelte","../src/SearchBar.svelte","../src/database.js","../src/Sidebar.svelte","../src/Dashboard.svelte","../src/dashboard.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.$$l[type]) {\n\t\t\t\tconst idx = this.$$l[type].indexOf(listener);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis.$$l[type].splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.20';\nexport const PUBLIC_VERSION = '4';\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","<script>\n  export let bookmark;\n  \n  function formatDate(timestamp) {\n    return new Date(timestamp).toLocaleDateString();\n  }\n  \n  function openBookmark(url) {\n    chrome.tabs.create({ url });\n  }\n  \n  function getFaviconUrl(bookmark) {\n    // For HTTP/HTTPS URLs, create a simple domain-based icon\n    if (bookmark.url.startsWith('http://') || bookmark.url.startsWith('https://')) {\n      // Create a simple letter-based favicon using the first letter of the domain\n      const firstLetter = bookmark.domain.charAt(0).toUpperCase();\n      const colors = ['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#EC4899'];\n      const colorIndex = bookmark.domain.length % colors.length;\n      const color = colors[colorIndex];\n      \n      return `data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"${color}\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"white\" font-weight=\"bold\">${firstLetter}</text></svg>`;\n    }\n    \n    // Return specific icons for different types\n    switch (bookmark.domain) {\n      case 'chrome-internal':\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%23EA4335\"/><circle cx=\"8\" cy=\"8\" r=\"3\" fill=\"white\"/></svg>';\n      case 'local-file':\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%23F59E0B\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"white\">📄</text></svg>';\n      case 'other-protocol':\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%236B7280\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"white\">⚡</text></svg>';\n      default:\n        return 'data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\"><rect width=\"16\" height=\"16\" fill=\"%23E5E7EB\"/><text x=\"8\" y=\"12\" font-family=\"Arial\" font-size=\"10\" text-anchor=\"middle\" fill=\"%236B7280\">?</text></svg>';\n    }\n  }\n  \n  function getDomainLabel(bookmark) {\n    switch (bookmark.domain) {\n      case 'chrome-internal':\n        return 'Chrome';\n      case 'local-file':\n        return 'Local File';\n      case 'other-protocol':\n        return 'Other';\n      case 'invalid-url':\n        return 'Invalid URL';\n      default:\n        return bookmark.domain;\n    }\n  }\n</script>\n\n<div class=\"bookmark-card bg-white rounded-lg shadow-md p-4 hover:shadow-lg transition-shadow cursor-pointer border border-gray-200\"\n     role=\"button\"\n     tabindex=\"0\"\n     on:click={() => openBookmark(bookmark.url)}\n     on:keydown={(e) => e.key === 'Enter' && openBookmark(bookmark.url)}>\n  <div class=\"flex items-start space-x-3\">\n    <img \n      src=\"{getFaviconUrl(bookmark)}\"\n      alt=\"Favicon\"\n      class=\"w-4 h-4 mt-1 flex-shrink-0\"\n    />\n    <div class=\"flex-1 min-w-0\">\n      <h3 class=\"text-sm font-medium text-gray-900 truncate\" title={bookmark.title}>\n        {bookmark.title}\n      </h3>\n      <p class=\"text-xs text-gray-500 truncate mt-1\" title={bookmark.url}>\n        {bookmark.url}\n      </p>\n      <div class=\"flex items-center justify-between mt-2\">\n        <span class=\"text-xs text-blue-600 bg-blue-50 px-2 py-1 rounded\">\n          {getDomainLabel(bookmark)}\n        </span>\n        <span class=\"text-xs text-gray-400\">\n          {formatDate(bookmark.dateAdded)}\n        </span>\n      </div>\n      {#if bookmark.folderPath}\n        <p class=\"text-xs text-gray-400 mt-1 truncate\" title={bookmark.folderPath}>\n          📁 {bookmark.folderPath}\n        </p>\n      {/if}\n    </div>\n  </div>\n</div>\n\n<style>\n  .bookmark-card:hover {\n    transform: translateY(-1px);\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let value = '';\n  \n  let debounceTimer;\n  \n  function handleInput(event) {\n    value = event.target.value;\n    \n    // Debounce search to avoid too many queries\n    clearTimeout(debounceTimer);\n    debounceTimer = setTimeout(() => {\n      dispatch('search', { query: value });\n    }, 300);\n  }\n  \n  function clearSearch() {\n    value = '';\n    dispatch('search', { query: '' });\n  }\n</script>\n\n<div class=\"relative mb-6\">\n  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n    </svg>\n  </div>\n  <input\n    type=\"text\"\n    bind:value\n    on:input={handleInput}\n    placeholder=\"Search bookmarks by title or URL...\"\n    class=\"block w-full pl-10 pr-10 py-3 border border-gray-300 rounded-lg leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n  />\n  {#if value}\n    <button\n      on:click={clearSearch}\n      class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n      type=\"button\"\n    >\n      <svg class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n      </svg>\n    </button>\n  {/if}\n</div>\n","// Database utilities using Chrome storage instead of Dexie for simplicity\n\n// Get all bookmarks from Chrome storage\nexport async function getAllBookmarks() {\n  try {\n    const result = await chrome.storage.local.get(['bookmarks']);\n    return result.bookmarks || [];\n  } catch (error) {\n    console.error('Error getting bookmarks:', error);\n    return [];\n  }\n}\n\n// Search functionality\nexport async function searchBookmarks(query) {\n  try {\n    const bookmarks = await getAllBookmarks();\n    \n    if (!query.trim()) {\n      return bookmarks.sort((a, b) => b.dateAdded - a.dateAdded);\n    }\n    \n    const lowerQuery = query.toLowerCase();\n    return bookmarks\n      .filter(bookmark => \n        bookmark.title.toLowerCase().includes(lowerQuery) ||\n        bookmark.url.toLowerCase().includes(lowerQuery) ||\n        bookmark.domain.toLowerCase().includes(lowerQuery)\n      )\n      .sort((a, b) => b.dateAdded - a.dateAdded);\n  } catch (error) {\n    console.error('Search error:', error);\n    return [];\n  }\n}\n\n// Get bookmarks by domain\nexport async function getBookmarksByDomain(domain) {\n  try {\n    const bookmarks = await getAllBookmarks();\n    return bookmarks.filter(bookmark => bookmark.domain === domain);\n  } catch (error) {\n    console.error('Error getting bookmarks by domain:', error);\n    return [];\n  }\n}\n\n// Get bookmarks by date range\nexport async function getBookmarksByDateRange(startDate, endDate) {\n  try {\n    const bookmarks = await getAllBookmarks();\n    return bookmarks.filter(bookmark => \n      bookmark.dateAdded >= startDate && bookmark.dateAdded <= endDate\n    );\n  } catch (error) {\n    console.error('Error getting bookmarks by date range:', error);\n    return [];\n  }\n}\n\n// Get bookmarks by folder\nexport async function getBookmarksByFolder(folderPath) {\n  try {\n    const bookmarks = await getAllBookmarks();\n    return bookmarks.filter(bookmark => bookmark.folderPath === folderPath);\n  } catch (error) {\n    console.error('Error getting bookmarks by folder:', error);\n    return [];\n  }\n}\n\n// Get unique domains\nexport async function getUniqueDomains() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const domains = [...new Set(bookmarks.map(b => b.domain))];\n    return domains.sort();\n  } catch (error) {\n    console.error('Error getting unique domains:', error);\n    return [];\n  }\n}\n\n// Get unique folders\nexport async function getUniqueFolders() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const folders = [...new Set(bookmarks.map(b => b.folderPath).filter(f => f))];\n    return folders.sort();\n  } catch (error) {\n    console.error('Error getting unique folders:', error);\n    return [];\n  }\n}\n\n// Get domain statistics\nexport async function getDomainStats() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const domainCount = {};\n    \n    bookmarks.forEach(bookmark => {\n      domainCount[bookmark.domain] = (domainCount[bookmark.domain] || 0) + 1;\n    });\n    \n    return Object.entries(domainCount)\n      .sort(([,a], [,b]) => b - a)\n      .slice(0, 10);\n  } catch (error) {\n    console.error('Error getting domain stats:', error);\n    return [];\n  }\n}\n\n// Get activity timeline\nexport async function getActivityTimeline() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const monthlyCount = {};\n    \n    bookmarks.forEach(bookmark => {\n      const date = new Date(bookmark.dateAdded);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      monthlyCount[monthKey] = (monthlyCount[monthKey] || 0) + 1;\n    });\n    \n    return Object.entries(monthlyCount).sort();\n  } catch (error) {\n    console.error('Error getting activity timeline:', error);\n    return [];\n  }\n}\n\n// Find duplicate bookmarks\nexport async function findDuplicates() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const urlMap = {};\n    \n    bookmarks.forEach(bookmark => {\n      if (!urlMap[bookmark.url]) {\n        urlMap[bookmark.url] = [];\n      }\n      urlMap[bookmark.url].push(bookmark);\n    });\n    \n    // Filter out groups where bookmarks might no longer exist\n    const duplicateGroups = Object.values(urlMap).filter(group => group.length > 1);\n    \n    // Verify bookmarks still exist by checking with Chrome API\n    const validGroups = [];\n    for (const group of duplicateGroups) {\n      const validBookmarks = [];\n      for (const bookmark of group) {\n        try {\n          const exists = await chrome.bookmarks.get([bookmark.id]);\n          if (exists && exists.length > 0) {\n            validBookmarks.push(bookmark);\n          }\n        } catch (e) {\n          // Bookmark doesn't exist anymore, skip it\n          console.log(`Bookmark ${bookmark.id} no longer exists`);\n        }\n      }\n      if (validBookmarks.length > 1) {\n        validGroups.push(validBookmarks);\n      }\n    }\n    \n    return validGroups;\n  } catch (error) {\n    console.error('Error finding duplicates:', error);\n    return [];\n  }\n}\n\n// Find orphaned bookmarks\nexport async function findOrphans() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    return bookmarks.filter(bookmark => \n      !bookmark.folderPath || \n      bookmark.folderPath === 'Bookmarks Bar' ||\n      bookmark.folderPath === 'Other Bookmarks'\n    );\n  } catch (error) {\n    console.error('Error finding orphans:', error);\n    return [];\n  }\n}\n\n// Find malformed URLs\nexport async function findMalformedUrls() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    return bookmarks.filter(bookmark => \n      !bookmark.url.startsWith('http://') && \n      !bookmark.url.startsWith('https://')\n    );\n  } catch (error) {\n    console.error('Error finding malformed URLs:', error);\n    return [];\n  }\n}\n\n// Trigger sync from background script\nexport async function syncBookmarks() {\n  try {\n    return new Promise((resolve, reject) => {\n      chrome.runtime.sendMessage({ action: 'syncBookmarks' }, (response) => {\n        if (response.success) {\n          resolve();\n        } else {\n          reject(new Error(response.error));\n        }\n      });\n    });\n  } catch (error) {\n    console.error('Error syncing bookmarks:', error);\n    throw error;\n  }\n}\n\n// Get bookmarks with pagination for better performance\nexport async function getBookmarksPaginated(page = 0, pageSize = 50, filters = {}) {\n  try {\n    const allBookmarks = await getAllBookmarks();\n    let filteredBookmarks = allBookmarks;\n\n    // Apply multiple filters\n    if (filters.domains && filters.domains.length > 0) {\n      filteredBookmarks = filteredBookmarks.filter(bookmark => \n        filters.domains.includes(bookmark.domain)\n      );\n    }\n\n    if (filters.folders && filters.folders.length > 0) {\n      filteredBookmarks = filteredBookmarks.filter(bookmark => \n        filters.folders.includes(bookmark.folderPath)\n      );\n    }\n\n    if (filters.dateRange) {\n      filteredBookmarks = filteredBookmarks.filter(bookmark => \n        bookmark.dateAdded >= filters.dateRange.startDate && \n        bookmark.dateAdded <= filters.dateRange.endDate\n      );\n    }\n\n    if (filters.searchQuery) {\n      const lowerQuery = filters.searchQuery.toLowerCase();\n      filteredBookmarks = filteredBookmarks.filter(bookmark => \n        bookmark.title.toLowerCase().includes(lowerQuery) ||\n        bookmark.url.toLowerCase().includes(lowerQuery) ||\n        bookmark.domain.toLowerCase().includes(lowerQuery)\n      );\n    }\n\n    // Sort by date added (newest first)\n    filteredBookmarks.sort((a, b) => b.dateAdded - a.dateAdded);\n\n    const startIndex = page * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedBookmarks = filteredBookmarks.slice(startIndex, endIndex);\n\n    return {\n      bookmarks: paginatedBookmarks,\n      totalCount: filteredBookmarks.length,\n      hasMore: endIndex < filteredBookmarks.length,\n      currentPage: page\n    };\n  } catch (error) {\n    console.error('Error getting paginated bookmarks:', error);\n    return {\n      bookmarks: [],\n      totalCount: 0,\n      hasMore: false,\n      currentPage: 0\n    };\n  }\n}\n\n// Get domains sorted by recency (most recent bookmark first)\nexport async function getDomainsByRecency() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const domainLatest = {};\n    \n    bookmarks.forEach(bookmark => {\n      if (!domainLatest[bookmark.domain] || bookmark.dateAdded > domainLatest[bookmark.domain].dateAdded) {\n        domainLatest[bookmark.domain] = {\n          domain: bookmark.domain,\n          dateAdded: bookmark.dateAdded,\n          count: 0\n        };\n      }\n    });\n\n    // Count bookmarks per domain\n    bookmarks.forEach(bookmark => {\n      domainLatest[bookmark.domain].count++;\n    });\n    \n    return Object.values(domainLatest)\n      .sort((a, b) => b.dateAdded - a.dateAdded);\n  } catch (error) {\n    console.error('Error getting domains by recency:', error);\n    return [];\n  }\n}\n\n// Get domains sorted by bookmark count (most bookmarks first)\nexport async function getDomainsByCount() {\n  try {\n    const bookmarks = await getAllBookmarks();\n    const domainCount = {};\n    const domainLatest = {};\n    \n    bookmarks.forEach(bookmark => {\n      domainCount[bookmark.domain] = (domainCount[bookmark.domain] || 0) + 1;\n      if (!domainLatest[bookmark.domain] || bookmark.dateAdded > domainLatest[bookmark.domain]) {\n        domainLatest[bookmark.domain] = bookmark.dateAdded;\n      }\n    });\n    \n    return Object.entries(domainCount)\n      .map(([domain, count]) => ({\n        domain,\n        count,\n        latestDate: domainLatest[domain]\n      }))\n      .sort((a, b) => b.count - a.count);\n  } catch (error) {\n    console.error('Error getting domains by count:', error);\n    return [];\n  }\n}\n","<script>\n  import { createEventDispatcher, onMount } from 'svelte';\n  import { getDomainsByRecency, getDomainsByCount, getUniqueFolders } from './database.js';\n  \n  const dispatch = createEventDispatcher();\n  \n  let domainsByRecency = [];\n  let domainsByCount = [];\n  let folders = [];\n  let selectedFilters = {\n    domains: [],\n    folders: [],\n    dateRange: null\n  };\n  let domainSortMode = 'recency'; // 'recency' or 'count'\n  \n  onMount(async () => {\n    try {\n      await loadDomains();\n      folders = await getUniqueFolders();\n    } catch (error) {\n      console.error('Error loading filters:', error);\n    }\n  });\n\n  async function loadDomains() {\n    domainsByRecency = await getDomainsByRecency();\n    domainsByCount = await getDomainsByCount();\n  }\n\n  $: currentDomains = domainSortMode === 'recency' ? domainsByRecency : domainsByCount;\n  \n  function toggleDomainFilter(domain) {\n    if (selectedFilters.domains.includes(domain)) {\n      selectedFilters.domains = selectedFilters.domains.filter(d => d !== domain);\n    } else {\n      selectedFilters.domains = [...selectedFilters.domains, domain];\n    }\n    dispatchFilters();\n  }\n\n  function toggleFolderFilter(folder) {\n    if (selectedFilters.folders.includes(folder)) {\n      selectedFilters.folders = selectedFilters.folders.filter(f => f !== folder);\n    } else {\n      selectedFilters.folders = [...selectedFilters.folders, folder];\n    }\n    dispatchFilters();\n  }\n\n  function setDateFilter(startDate, endDate, period) {\n    selectedFilters.dateRange = { startDate, endDate, period };\n    dispatchFilters();\n  }\n  \n  function clearFilters() {\n    selectedFilters = {\n      domains: [],\n      folders: [],\n      dateRange: null\n    };\n    dispatchFilters();\n  }\n\n  function dispatchFilters() {\n    dispatch('filter', selectedFilters);\n  }\n\n  function hasActiveFilters() {\n    return selectedFilters.domains.length > 0 || \n           selectedFilters.folders.length > 0 || \n           selectedFilters.dateRange !== null;\n  }\n  \n  function applyDateFilter(period) {\n    const now = new Date();\n    let startDate;\n    \n    switch (period) {\n      case 'week':\n        startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n        break;\n      case 'month':\n        startDate = new Date(now.getFullYear(), now.getMonth(), 1);\n        break;\n      case 'year':\n        startDate = new Date(now.getFullYear(), 0, 1);\n        break;\n    }\n    \n    setDateFilter(startDate.getTime(), now.getTime(), period);\n  }\n\n  function formatTimeAgo(timestamp) {\n    const now = Date.now();\n    const diff = now - timestamp;\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    \n    if (days === 0) return 'Today';\n    if (days === 1) return '1 day ago';\n    if (days < 7) return `${days} days ago`;\n    if (days < 30) return `${Math.floor(days / 7)} weeks ago`;\n    if (days < 365) return `${Math.floor(days / 30)} months ago`;\n    return `${Math.floor(days / 365)} years ago`;\n  }\n</script>\n\n<div class=\"w-64 bg-gray-50 border-r border-gray-200 p-4 overflow-y-auto\">\n  <div class=\"mb-6\">\n    <div class=\"flex items-center justify-between mb-3\">\n      <h3 class=\"text-sm font-medium text-gray-900\">Filters</h3>\n      {#if hasActiveFilters()}\n        <button\n          on:click={clearFilters}\n          class=\"text-xs text-blue-600 hover:text-blue-800\"\n        >\n          Clear All\n        </button>\n      {/if}\n    </div>\n    \n    <!-- Active Filters Display -->\n    {#if hasActiveFilters()}\n      <div class=\"mb-4 space-y-2\">\n        {#each selectedFilters.domains as domain}\n          <div class=\"flex items-center justify-between p-2 bg-blue-50 rounded-md\">\n            <div class=\"text-xs text-blue-800\">Domain: {domain}</div>\n            <button \n              on:click={() => toggleDomainFilter(domain)}\n              class=\"text-blue-600 hover:text-blue-800\"\n            >\n              ×\n            </button>\n          </div>\n        {/each}\n        {#each selectedFilters.folders as folder}\n          <div class=\"flex items-center justify-between p-2 bg-green-50 rounded-md\">\n            <div class=\"text-xs text-green-800\">Folder: {folder}</div>\n            <button \n              on:click={() => toggleFolderFilter(folder)}\n              class=\"text-green-600 hover:text-green-800\"\n            >\n              ×\n            </button>\n          </div>\n        {/each}\n        {#if selectedFilters.dateRange}\n          <div class=\"flex items-center justify-between p-2 bg-purple-50 rounded-md\">\n            <div class=\"text-xs text-purple-800\">\n              {selectedFilters.dateRange.period === 'week' ? 'This Week' : \n               selectedFilters.dateRange.period === 'month' ? 'This Month' : 'This Year'}\n            </div>\n            <button \n              on:click={() => { selectedFilters.dateRange = null; dispatchFilters(); }}\n              class=\"text-purple-600 hover:text-purple-800\"\n            >\n              ×\n            </button>\n          </div>\n        {/if}\n      </div>\n    {/if}\n  </div>\n  \n  <!-- Date Filters -->\n  <div class=\"mb-6\">\n    <h4 class=\"text-xs font-medium text-gray-700 uppercase tracking-wide mb-2\">\n      Date Added\n    </h4>\n    <div class=\"space-y-1\">\n      <button\n        on:click={() => applyDateFilter('week')}\n        class=\"w-full text-left px-2 py-1 text-sm text-gray-600 hover:bg-gray-100 rounded\"\n        class:bg-blue-50={selectedFilters.dateRange?.period === 'week'}\n        class:text-blue-700={selectedFilters.dateRange?.period === 'week'}\n      >\n        This Week\n      </button>\n      <button\n        on:click={() => applyDateFilter('month')}\n        class=\"w-full text-left px-2 py-1 text-sm text-gray-600 hover:bg-gray-100 rounded\"\n        class:bg-blue-50={selectedFilters.dateRange?.period === 'month'}\n        class:text-blue-700={selectedFilters.dateRange?.period === 'month'}\n      >\n        This Month\n      </button>\n      <button\n        on:click={() => applyDateFilter('year')}\n        class=\"w-full text-left px-2 py-1 text-sm text-gray-600 hover:bg-gray-100 rounded\"\n        class:bg-blue-50={selectedFilters.dateRange?.period === 'year'}\n        class:text-blue-700={selectedFilters.dateRange?.period === 'year'}\n      >\n        This Year\n      </button>\n    </div>\n  </div>\n  \n  <!-- Domain Filters -->\n  <div class=\"mb-6\">\n    <div class=\"flex items-center justify-between mb-2\">\n      <h4 class=\"text-xs font-medium text-gray-700 uppercase tracking-wide\">\n        Domains ({currentDomains.length})\n      </h4>\n      <div class=\"flex space-x-1\">\n        <button\n          on:click={() => domainSortMode = 'recency'}\n          class=\"text-xs px-2 py-1 rounded\"\n          class:bg-blue-100={domainSortMode === 'recency'}\n          class:text-blue-700={domainSortMode === 'recency'}\n          class:text-gray-500={domainSortMode !== 'recency'}\n          title=\"Sort by most recent bookmark\"\n        >\n          Recent\n        </button>\n        <button\n          on:click={() => domainSortMode = 'count'}\n          class=\"text-xs px-2 py-1 rounded\"\n          class:bg-blue-100={domainSortMode === 'count'}\n          class:text-blue-700={domainSortMode === 'count'}\n          class:text-gray-500={domainSortMode !== 'count'}\n          title=\"Sort by bookmark count\"\n        >\n          Count\n        </button>\n      </div>\n    </div>\n    <div class=\"space-y-1 max-h-64 overflow-y-auto\">\n      {#each currentDomains.slice(0, 30) as domainData}\n        <button\n          on:click={() => toggleDomainFilter(domainData.domain)}\n          class=\"w-full text-left px-2 py-2 text-sm hover:bg-gray-100 rounded border\"\n          class:bg-blue-50={selectedFilters.domains.includes(domainData.domain)}\n          class:text-blue-700={selectedFilters.domains.includes(domainData.domain)}\n          class:border-blue-200={selectedFilters.domains.includes(domainData.domain)}\n          class:text-gray-600={!selectedFilters.domains.includes(domainData.domain)}\n          class:border-transparent={!selectedFilters.domains.includes(domainData.domain)}\n          title={domainData.domain}\n        >\n          <div class=\"truncate font-medium\">{domainData.domain}</div>\n          <div class=\"flex justify-between items-center text-xs text-gray-500 mt-1\">\n            <span>{domainData.count} bookmark{domainData.count !== 1 ? 's' : ''}</span>\n            {#if domainSortMode === 'recency'}\n              <span>{formatTimeAgo(domainData.dateAdded || domainData.latestDate)}</span>\n            {/if}\n          </div>\n        </button>\n      {/each}\n      {#if currentDomains.length > 30}\n        <div class=\"text-xs text-gray-400 px-2 py-1\">\n          ... and {currentDomains.length - 30} more\n        </div>\n      {/if}\n    </div>\n  </div>\n  \n  <!-- Folder Filters -->\n  <div class=\"mb-6\">\n    <h4 class=\"text-xs font-medium text-gray-700 uppercase tracking-wide mb-2\">\n      Folders ({folders.length})\n    </h4>\n    <div class=\"space-y-1 max-h-48 overflow-y-auto\">\n      {#each folders.slice(0, 15) as folder}\n        <button\n          on:click={() => toggleFolderFilter(folder)}\n          class=\"w-full text-left px-2 py-1 text-sm hover:bg-gray-100 rounded border\"\n          class:bg-green-50={selectedFilters.folders.includes(folder)}\n          class:text-green-700={selectedFilters.folders.includes(folder)}\n          class:border-green-200={selectedFilters.folders.includes(folder)}\n          class:text-gray-600={!selectedFilters.folders.includes(folder)}\n          class:border-transparent={!selectedFilters.folders.includes(folder)}\n          title={folder}\n        >\n          <span class=\"truncate\">📁 {folder}</span>\n        </button>\n      {/each}\n      {#if folders.length > 15}\n        <div class=\"text-xs text-gray-400 px-2 py-1\">\n          ... and {folders.length - 15} more\n        </div>\n      {/if}\n    </div>\n  </div>\n</div>\n","<script>\n  import { onMount } from 'svelte';\n  import { Chart, registerables } from 'chart.js';\n  import BookmarkCard from './BookmarkCard.svelte';\n  import SearchBar from './SearchBar.svelte';\n  import Sidebar from './Sidebar.svelte';\n  import { \n    searchBookmarks, \n    getBookmarksPaginated, \n    getBookmarksByDomain, \n    getBookmarksByDateRange, \n    getBookmarksByFolder,\n    getDomainStats,\n    getActivityTimeline,\n    findDuplicates,\n    findOrphans,\n    findMalformedUrls\n  } from './database.js';\n  \n  Chart.register(...registerables);\n  \n  let bookmarks = [];\n  let loading = true;\n  let error = null;\n  let currentView = 'bookmarks'; // bookmarks, insights, health\n  let searchQuery = '';\n  \n  // Pagination variables\n  let currentPage = 0;\n  let totalCount = 0;\n  let hasMore = false;\n  let pageSize = 50;\n  \n  // Filter state\n  let currentFilters = {\n    domains: [],\n    folders: [],\n    dateRange: null,\n    searchQuery: ''\n  };\n  \n  // Chart variables\n  let domainChart = null;\n  let activityChart = null;\n  \n  // Health data\n  let duplicates = [];\n  let orphans = [];\n  let malformedUrls = [];\n  \n  onMount(async () => {\n    try {\n      await loadBookmarksPaginated();\n      if (currentView === 'insights') {\n        await loadInsights();\n      } else if (currentView === 'health') {\n        await loadHealthData();\n      }\n    } catch (err) {\n      error = err.message;\n    } finally {\n      loading = false;\n    }\n  });\n  \n  async function loadBookmarksPaginated(page = 0, append = false) {\n    try {\n      const filters = { ...currentFilters };\n      const result = await getBookmarksPaginated(page, pageSize, filters);\n      \n      if (append) {\n        bookmarks = [...bookmarks, ...result.bookmarks];\n      } else {\n        bookmarks = result.bookmarks;\n      }\n      \n      currentPage = result.currentPage;\n      totalCount = result.totalCount;\n      hasMore = result.hasMore;\n    } catch (err) {\n      console.error('Error loading bookmarks:', err);\n      throw err;\n    }\n  }\n\n  async function loadMoreBookmarks() {\n    if (!hasMore || loading) return;\n    \n    try {\n      loading = true;\n      await loadBookmarksPaginated(currentPage + 1, true);\n    } catch (err) {\n      error = err.message;\n    } finally {\n      loading = false;\n    }\n  }\n  \n  async function handleSearch(event) {\n    const query = event.detail.query;\n    searchQuery = query;\n    currentFilters.searchQuery = query;\n    \n    try {\n      loading = true;\n      currentPage = 0;\n      await loadBookmarksPaginated();\n    } catch (err) {\n      error = err.message;\n    } finally {\n      loading = false;\n    }\n  }\n  \n  async function handleFilter(event) {\n    const filters = event.detail;\n    currentFilters = { ...currentFilters, ...filters };\n    \n    try {\n      loading = true;\n      currentPage = 0;\n      await loadBookmarksPaginated();\n    } catch (err) {\n      error = err.message;\n    } finally {\n      loading = false;\n    }\n  }\n  \n  async function switchView(view) {\n    currentView = view;\n    loading = true;\n    \n    try {\n      if (view === 'bookmarks') {\n        currentPage = 0;\n        await loadBookmarksPaginated();\n      } else if (view === 'insights') {\n        await loadInsights();\n      } else if (view === 'health') {\n        await loadHealthData();\n      }\n    } catch (err) {\n      error = err.message;\n    } finally {\n      loading = false;\n    }\n  }\n  \n  async function loadInsights() {\n    try {\n      const domainStats = await getDomainStats();\n      const activityTimeline = await getActivityTimeline();\n      \n      // Create domain chart\n      setTimeout(() => {\n        const domainCtx = document.getElementById('domainChart');\n        if (domainCtx) {\n          if (domainChart) domainChart.destroy();\n          domainChart = new Chart(domainCtx, {\n            type: 'bar',\n            data: {\n              labels: domainStats.map(([domain]) => domain),\n              datasets: [{\n                label: 'Bookmarks',\n                data: domainStats.map(([, count]) => count),\n                backgroundColor: 'rgba(59, 130, 246, 0.5)',\n                borderColor: 'rgba(59, 130, 246, 1)',\n                borderWidth: 1\n              }]\n            },\n            options: {\n              responsive: true,\n              plugins: {\n                title: {\n                  display: true,\n                  text: 'Top 10 Domains'\n                }\n              },\n              scales: {\n                y: {\n                  beginAtZero: true\n                }\n              }\n            }\n          });\n        }\n        \n        // Create activity chart\n        const activityCtx = document.getElementById('activityChart');\n        if (activityCtx) {\n          if (activityChart) activityChart.destroy();\n          activityChart = new Chart(activityCtx, {\n            type: 'line',\n            data: {\n              labels: activityTimeline.map(([month]) => month),\n              datasets: [{\n                label: 'Bookmarks Added',\n                data: activityTimeline.map(([, count]) => count),\n                fill: false,\n                borderColor: 'rgba(34, 197, 94, 1)',\n                backgroundColor: 'rgba(34, 197, 94, 0.1)',\n                tension: 0.1\n              }]\n            },\n            options: {\n              responsive: true,\n              plugins: {\n                title: {\n                  display: true,\n                  text: 'Bookmark Activity Timeline'\n                }\n              },\n              scales: {\n                y: {\n                  beginAtZero: true\n                }\n              }\n            }\n          });\n        }\n      }, 100);\n    } catch (err) {\n      console.error('Error loading insights:', err);\n    }\n  }\n  \n  async function loadHealthData() {\n    try {\n      duplicates = await findDuplicates();\n      orphans = await findOrphans();\n      malformedUrls = await findMalformedUrls();\n    } catch (err) {\n      console.error('Error loading health data:', err);\n    }\n  }\n  \n  async function deleteDuplicate(bookmarkId) {\n    try {\n      // First check if the bookmark still exists\n      const existingBookmarks = await chrome.bookmarks.get([bookmarkId]);\n      if (existingBookmarks && existingBookmarks.length > 0) {\n        await chrome.bookmarks.remove(bookmarkId);\n        console.log(`Deleted bookmark: ${bookmarkId}`);\n      } else {\n        console.log(`Bookmark ${bookmarkId} no longer exists`);\n      }\n      // Reload health data\n      await loadHealthData();\n    } catch (err) {\n      console.error('Error deleting bookmark:', err);\n      // Still reload health data to refresh the list\n      await loadHealthData();\n    }\n  }\n</script>\n\n<svelte:head>\n  <title>Bookmark Insight Dashboard</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">\n</svelte:head>\n\n<div class=\"min-h-screen bg-gray-50\">\n  <!-- Header -->\n  <header class=\"bg-white shadow-sm border-b border-gray-200\">\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <div class=\"flex justify-between items-center py-4\">\n        <div class=\"flex items-center space-x-4\">\n          <h1 class=\"text-2xl font-bold text-gray-900\">Bookmark Insight</h1>\n        </div>\n        \n        <!-- Navigation -->\n        <nav class=\"flex space-x-4\">\n          <button\n            on:click={() => switchView('bookmarks')}\n            class=\"px-4 py-2 rounded-md text-sm font-medium\"\n            class:bg-blue-100={currentView === 'bookmarks'}\n            class:text-blue-700={currentView === 'bookmarks'}\n            class:text-gray-500={currentView !== 'bookmarks'}\n            class:hover:text-gray-700={currentView !== 'bookmarks'}\n          >\n            Bookmarks\n          </button>\n          <button\n            on:click={() => switchView('insights')}\n            class=\"px-4 py-2 rounded-md text-sm font-medium\"\n            class:bg-blue-100={currentView === 'insights'}\n            class:text-blue-700={currentView === 'insights'}\n            class:text-gray-500={currentView !== 'insights'}\n            class:hover:text-gray-700={currentView !== 'insights'}\n          >\n            Insights\n          </button>\n          <button\n            on:click={() => switchView('health')}\n            class=\"px-4 py-2 rounded-md text-sm font-medium\"\n            class:bg-blue-100={currentView === 'health'}\n            class:text-blue-700={currentView === 'health'}\n            class:text-gray-500={currentView !== 'health'}\n            class:hover:text-gray-700={currentView !== 'health'}\n          >\n            Health\n          </button>\n        </nav>\n      </div>\n    </div>\n  </header>\n  \n  <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n    {#if currentView === 'bookmarks'}\n      <div class=\"mb-6\">\n        <SearchBar on:search={handleSearch} />\n      </div>\n      \n      <div class=\"flex\">\n        <Sidebar on:filter={handleFilter} />\n        \n        <div class=\"flex-1 ml-6\">\n          {#if loading}\n            <div class=\"flex items-center justify-center h-64\">\n              <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n            </div>\n          {:else if error}\n            <div class=\"text-center text-red-600 p-8\">\n              <p>Error: {error}</p>\n              <button\n                on:click={() => loadBookmarksPaginated()}\n                class=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n              >\n                Retry\n              </button>\n            </div>\n          {:else if bookmarks.length === 0}\n            <div class=\"text-center text-gray-500 p-8\">\n              {#if searchQuery}\n                <p>No bookmarks found for \"{searchQuery}\"</p>\n              {:else}\n                <p>No bookmarks found</p>\n              {/if}\n            </div>\n          {:else}\n            <div class=\"mb-4 flex items-center justify-between\">\n              <h2 class=\"text-lg font-medium text-gray-900\">\n                {totalCount} bookmark{totalCount !== 1 ? 's' : ''}\n                {#if currentFilters.domains.length > 0 || currentFilters.folders.length > 0 || currentFilters.dateRange || currentFilters.searchQuery}\n                  <span class=\"text-sm text-gray-500\">\n                    (filtered from {totalCount} total)\n                  </span>\n                {/if}\n              </h2>\n              <div class=\"text-sm text-gray-500\">\n                Showing {bookmarks.length} of {totalCount}\n              </div>\n            </div>\n            \n            <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {#each bookmarks as bookmark (bookmark.id)}\n                <BookmarkCard {bookmark} />\n              {/each}\n            </div>\n\n            <!-- Load More Button -->\n            {#if hasMore}\n              <div class=\"mt-8 text-center\">\n                <button\n                  on:click={loadMoreBookmarks}\n                  disabled={loading}\n                  class=\"px-6 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {#if loading}\n                    <div class=\"flex items-center\">\n                      <div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      Loading...\n                    </div>\n                  {:else}\n                    Load More\n                  {/if}\n                </button>\n              </div>\n            {/if}\n          {/if}\n        </div>\n      </div>\n    {:else if currentView === 'insights'}\n      <div class=\"space-y-8\">\n        {#if loading}\n          <div class=\"flex items-center justify-center h-64\">\n            <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n          </div>\n        {:else}\n          <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <div class=\"bg-white p-6 rounded-lg shadow\">\n              <canvas id=\"domainChart\" width=\"400\" height=\"300\"></canvas>\n            </div>\n            <div class=\"bg-white p-6 rounded-lg shadow\">\n              <canvas id=\"activityChart\" width=\"400\" height=\"300\"></canvas>\n            </div>\n          </div>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div class=\"bg-white p-6 rounded-lg shadow text-center\">\n              <div class=\"text-3xl font-bold text-blue-600\">{bookmarks.length}</div>\n              <div class=\"text-gray-500\">Total Bookmarks</div>\n            </div>\n            <div class=\"bg-white p-6 rounded-lg shadow text-center\">\n              <div class=\"text-3xl font-bold text-green-600\">{duplicates.length}</div>\n              <div class=\"text-gray-500\">Duplicate Groups</div>\n            </div>\n            <div class=\"bg-white p-6 rounded-lg shadow text-center\">\n              <div class=\"text-3xl font-bold text-orange-600\">{orphans.length}</div>\n              <div class=\"text-gray-500\">Orphaned Bookmarks</div>\n            </div>\n          </div>\n        {/if}\n      </div>\n    {:else if currentView === 'health'}\n      <div class=\"space-y-8\">\n        {#if loading}\n          <div class=\"flex items-center justify-center h-64\">\n            <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n          </div>\n        {:else}\n          <!-- Duplicates -->\n          <div class=\"bg-white rounded-lg shadow\">\n            <div class=\"px-6 py-4 border-b border-gray-200\">\n              <h3 class=\"text-lg font-medium text-gray-900\">\n                Duplicate Bookmarks ({duplicates.length} groups)\n              </h3>\n            </div>\n            <div class=\"p-6\">\n              {#if duplicates.length === 0}\n                <p class=\"text-gray-500\">No duplicate bookmarks found.</p>\n              {:else}\n                <div class=\"space-y-6\">\n                  {#each duplicates as group}\n                    <div class=\"border border-gray-200 rounded-lg p-4\">\n                      <h4 class=\"font-medium text-gray-900 mb-3\">\n                        {group[0].url}\n                      </h4>\n                      <div class=\"space-y-2\">\n                        {#each group as bookmark, index}\n                          <div class=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                            <div class=\"flex-1\">\n                              <div class=\"text-sm font-medium\">{bookmark.title}</div>\n                              <div class=\"text-xs text-gray-500\">\n                                {bookmark.folderPath || 'No folder'}\n                              </div>\n                            </div>\n                            {#if index > 0}\n                              <button\n                                on:click={() => deleteDuplicate(bookmark.id)}\n                                class=\"ml-4 px-3 py-1 text-xs bg-red-600 text-white rounded hover:bg-red-700\"\n                              >\n                                Delete\n                              </button>\n                            {/if}\n                          </div>\n                        {/each}\n                      </div>\n                    </div>\n                  {/each}\n                </div>\n              {/if}\n            </div>\n          </div>\n          \n          <!-- Orphans -->\n          <div class=\"bg-white rounded-lg shadow\">\n            <div class=\"px-6 py-4 border-b border-gray-200\">\n              <h3 class=\"text-lg font-medium text-gray-900\">\n                Orphaned Bookmarks ({orphans.length})\n              </h3>\n            </div>\n            <div class=\"p-6\">\n              {#if orphans.length === 0}\n                <p class=\"text-gray-500\">No orphaned bookmarks found.</p>\n              {:else}\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {#each orphans as bookmark}\n                    <BookmarkCard {bookmark} />\n                  {/each}\n                </div>\n              {/if}\n            </div>\n          </div>\n          \n          <!-- Malformed URLs -->\n          <div class=\"bg-white rounded-lg shadow\">\n            <div class=\"px-6 py-4 border-b border-gray-200\">\n              <h3 class=\"text-lg font-medium text-gray-900\">\n                Malformed URLs ({malformedUrls.length})\n              </h3>\n            </div>\n            <div class=\"p-6\">\n              {#if malformedUrls.length === 0}\n                <p class=\"text-gray-500\">No malformed URLs found.</p>\n              {:else}\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {#each malformedUrls as bookmark}\n                    <BookmarkCard {bookmark} />\n                  {/each}\n                </div>\n              {/if}\n            </div>\n          </div>\n        {/if}\n      </div>\n    {/if}\n  </div>\n</div>\n","import Dashboard from './Dashboard.svelte';\n\nconst app = new Dashboard({\n  target: document.body\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","globals","window","globalThis","global","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","CustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","ensure_array_like","array_like_or_iterator","undefined","Array","from","outro_and_destroy_block","lookup","key","create_component","mount_component","m","new_on_destroy","map","filter","on_destroy","destroy_component","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","this","$on","index","splice","$set","obj","keys","round","v","__svelte","lim","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","hexString","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","hsl2rgb","hue","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","modHSL","ratio","tmp","clone","proto","assign","fromObject","functionParse","charAt","rgbParse","Color","constructor","len","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","uid","id","isNullOrUndef","prototype","toString","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","klen","isValidKey","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_arrayUnique","items","set","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","join","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","clipSelf","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","t1_value","folderPath","p_title_value","t1","t3_value","t5_value","getDomainLabel","formatDate","dateAdded","if_block","create_if_block","img","img_src_value","getFaviconUrl","h3","h3_title_value","div3","div2","div1","div0","span0","span1","t3","t5","t7","t7_value","timestamp","toLocaleDateString","openBookmark","chrome","tabs","bookmark","firstLetter","domain","$$props","button","dispatch","debounceTimer","$$invalidate","query","async","getAllBookmarks","bookmarks","t0_value","dateRange","period","t0","t_value","formatTimeAgo","latestDate","t2_value","t4_value","create_if_block_2","button_title_value","domains","t2","t4","div","folders","t13_value","t23_value","each_value_3","each_value_2","create_if_block_4","each_value_1","create_if_block_1","each_value","button0","button1","button2","button3","button4","div10","h40","div7","div5","h41","div4","div6","div9","h42","div8","t13","t23","days","domainsByRecency","domainsByCount","selectedFilters","domainSortMode","toggleDomainFilter","dispatchFilters","toggleFolderFilter","folder","applyDateFilter","startDate","getTime","getFullYear","getMonth","endDate","setDateFilter","domainLatest","getDomainsByRecency","domainCount","getDomainsByCount","loadDomains","getUniqueFolders","currentDomains","domainData","create_if_block_9","t6_value","t11_value","create_if_block_14","h30","h31","h32","t6","t11","create_if_block_15","h4","each_blocks","t10_value","div12","div11","t10","searchQuery","create_if_block_7","get_key","create_if_block_5","old_blocks","dynamic","list","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","will_move","did_move","new_block","old_block","new_key","old_key","create_if_block_6","document_1","link","header","nav","loading","currentView","currentPage","totalCount","hasMore","currentFilters","domainChart","activityChart","duplicates","orphans","malformedUrls","loadBookmarksPaginated","page","filters","pageSize","filteredBookmarks","lowerQuery","getBookmarksPaginated","err","switchView","view","loadInsights","loadHealthData","message","domainStats","getDomainStats","activityTimeline","monthlyCount","monthKey","padStart","getActivityTimeline","domainCtx","activityCtx","urlMap","duplicateGroups","group","validGroups","validBookmarks","exists","log","findDuplicates","findOrphans","findMalformedUrls","deleteDuplicate","bookmarkId","existingBookmarks","app"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}